{"ast":null,"code":"const initialState={};export const reducer=function(){let state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:initialState;let action=arguments.length>1?arguments[1]:undefined;switch(action.type){case'@listidCardids/set':// 목록uuid의 속성에 카드uuid의 배열을 추가, 계산된 속성명\nreturn{...state,[action.payload.listid]:action.payload.cardids};case'@listidCardids/remove':{// listidOrders에서 특정 목록(그릇)이 삭제되면 listidCardidOrders 에서도 state[삭제된_리스트_uuid] 부분을 삭제해야 한다.\nconst newState={...state};// 깊은 복사\ndelete newState[action.payload];// 색인 연산자로 대상 속성 지정 후 delete\nreturn newState;}case'@listidCardids/prependCardid':{const cardids=state[action.payload.listid];return{...state,[action.payload.listid]:[action.payload.cardid,...cardids]};}case'@listidCardids/appendCardid':{// 계산된 속성명은 추가 뿐만 아니라 update도 가능하다.\nconst cardids=state[action.payload.listid];return{...state,[action.payload.listid]:[...cardids,action.payload.cardid]};}case'@listidCardids/removeCardid':{const cardids=state[action.payload.listid];return{...state,[action.payload.listid]:cardids.filter(id=>id!==action.payload.cardid)};}}return state;};","map":{"version":3,"names":["initialState","reducer","state","arguments","length","undefined","action","type","payload","listid","cardids","newState","cardid","filter","id"],"sources":["C:/Users/82102/dev/projects/byKhanc/study/0723/ch05_4/src/store/listidCardidOrders/reducers.ts"],"sourcesContent":["import * as T from './types'\r\n\r\nconst initialState: T.State = {}\r\n\r\nexport const reducer = (state: T.State = initialState, action: T.Actions) => {\r\n  switch (action.type) {\r\n    case '@listidCardids/set': // 목록uuid의 속성에 카드uuid의 배열을 추가, 계산된 속성명\r\n      return {...state, [action.payload.listid]: action.payload.cardids}\r\n    case '@listidCardids/remove': {\r\n      // listidOrders에서 특정 목록(그릇)이 삭제되면 listidCardidOrders 에서도 state[삭제된_리스트_uuid] 부분을 삭제해야 한다.\r\n      const newState = {...state} // 깊은 복사\r\n      delete newState[action.payload] // 색인 연산자로 대상 속성 지정 후 delete\r\n      return newState\r\n    }\r\n    case '@listidCardids/prependCardid': {\r\n      const cardids = state[action.payload.listid]\r\n      return {...state, [action.payload.listid]: [action.payload.cardid, ...cardids]}\r\n    }\r\n    case '@listidCardids/appendCardid': {\r\n      // 계산된 속성명은 추가 뿐만 아니라 update도 가능하다.\r\n      const cardids = state[action.payload.listid]\r\n      return {...state, [action.payload.listid]: [...cardids, action.payload.cardid]}\r\n    }\r\n    case '@listidCardids/removeCardid': {\r\n      const cardids = state[action.payload.listid]\r\n      return {\r\n        ...state,\r\n        [action.payload.listid]: cardids.filter(id => id !== action.payload.cardid)\r\n      }\r\n    }\r\n  }\r\n  return state\r\n}\r\n"],"mappings":"AAEA,KAAM,CAAAA,YAAqB,CAAG,CAAC,CAAC,CAEhC,MAAO,MAAM,CAAAC,OAAO,CAAG,QAAAA,CAAA,CAAsD,IAArD,CAAAC,KAAc,CAAAC,SAAA,CAAAC,MAAA,IAAAD,SAAA,MAAAE,SAAA,CAAAF,SAAA,IAAGH,YAAY,IAAE,CAAAM,MAAiB,CAAAH,SAAA,CAAAC,MAAA,GAAAD,SAAA,IAAAE,SAAA,CACtE,OAAQC,MAAM,CAACC,IAAI,EACjB,IAAK,oBAAoB,CAAE;AACzB,MAAO,CAAC,GAAGL,KAAK,CAAE,CAACI,MAAM,CAACE,OAAO,CAACC,MAAM,EAAGH,MAAM,CAACE,OAAO,CAACE,OAAO,CAAC,CACpE,IAAK,uBAAuB,CAAE,CAC5B;AACA,KAAM,CAAAC,QAAQ,CAAG,CAAC,GAAGT,KAAK,CAAC,CAAC;AAC5B,MAAO,CAAAS,QAAQ,CAACL,MAAM,CAACE,OAAO,CAAC,CAAC;AAChC,MAAO,CAAAG,QAAQ,CACjB,CACA,IAAK,8BAA8B,CAAE,CACnC,KAAM,CAAAD,OAAO,CAAGR,KAAK,CAACI,MAAM,CAACE,OAAO,CAACC,MAAM,CAAC,CAC5C,MAAO,CAAC,GAAGP,KAAK,CAAE,CAACI,MAAM,CAACE,OAAO,CAACC,MAAM,EAAG,CAACH,MAAM,CAACE,OAAO,CAACI,MAAM,CAAE,GAAGF,OAAO,CAAC,CAAC,CACjF,CACA,IAAK,6BAA6B,CAAE,CAClC;AACA,KAAM,CAAAA,OAAO,CAAGR,KAAK,CAACI,MAAM,CAACE,OAAO,CAACC,MAAM,CAAC,CAC5C,MAAO,CAAC,GAAGP,KAAK,CAAE,CAACI,MAAM,CAACE,OAAO,CAACC,MAAM,EAAG,CAAC,GAAGC,OAAO,CAAEJ,MAAM,CAACE,OAAO,CAACI,MAAM,CAAC,CAAC,CACjF,CACA,IAAK,6BAA6B,CAAE,CAClC,KAAM,CAAAF,OAAO,CAAGR,KAAK,CAACI,MAAM,CAACE,OAAO,CAACC,MAAM,CAAC,CAC5C,MAAO,CACL,GAAGP,KAAK,CACR,CAACI,MAAM,CAACE,OAAO,CAACC,MAAM,EAAGC,OAAO,CAACG,MAAM,CAACC,EAAE,EAAIA,EAAE,GAAKR,MAAM,CAACE,OAAO,CAACI,MAAM,CAC5E,CAAC,CACH,CACF,CACA,MAAO,CAAAV,KAAK,CACd,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}