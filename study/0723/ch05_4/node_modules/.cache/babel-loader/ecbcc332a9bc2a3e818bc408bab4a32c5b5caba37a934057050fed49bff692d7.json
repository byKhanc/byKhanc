{"ast":null,"code":"import{forwardRef,useImperativeHandle,useMemo,useRef}from'react';import{jsx as _jsx}from\"react/jsx-runtime\";export const ValidatableInput=/*#__PURE__*/forwardRef((_ref,methodRef)=>{let{type,className:_className,...inputProps}=_ref;const className=useMemo(()=>['input',_className].join(' '),[_className]);const inputRef=useRef(null);useImperativeHandle(methodRef,()=>({validate:()=>{var _inputRef$current;const value=(_inputRef$current=inputRef.current)===null||_inputRef$current===void 0?void 0:_inputRef$current.value;if(!value||!value.length)return[false,'사용자가 입력한 내용이 없습니다.'];switch(type){case'email':{const regEx=/^([\\w-]+(?:\\.[\\w-]+)*)@((?:[\\w-]+\\.)*\\w[\\w-]{0,66})\\.([a-z]{2,6}(?:\\.[a-z]{2})?)$/i;const valid=regEx.test(value);return valid?[true,value]:[false,'틀린 이메일 주소 입니다.'];}}return[false,'컴포넌트 타입이 유효하지 않습니다.'];}}),[type]);return/*#__PURE__*/_jsx(\"input\",{...inputProps,className:className,ref:inputRef});});","map":{"version":3,"names":["forwardRef","useImperativeHandle","useMemo","useRef","jsx","_jsx","ValidatableInput","_ref","methodRef","type","className","_className","inputProps","join","inputRef","validate","_inputRef$current","value","current","length","regEx","valid","test","ref"],"sources":["C:/Users/82102/dev/projects/byKhanc/study/0723/ch05_4/src/theme/daisyui/ValidatableInput.tsx"],"sourcesContent":["import type {ReactInputProps} from './Input'\r\nimport {forwardRef, useImperativeHandle, useMemo, useRef} from 'react'\r\n\r\nexport type ValidatableInputMethods = {\r\n  validate: () => [boolean, string]\r\n}\r\n\r\nexport const ValidatableInput = forwardRef<ValidatableInputMethods, ReactInputProps>(\r\n  ({type, className: _className, ...inputProps}, methodRef) => {\r\n    const className = useMemo(() => ['input', _className].join(' '), [_className])\r\n    const inputRef = useRef<HTMLInputElement>(null)\r\n\r\n    useImperativeHandle(\r\n      methodRef,\r\n      () => ({\r\n        validate: (): [boolean, string] => {\r\n          const value = inputRef.current?.value\r\n          if (!value || !value.length) return [false, '사용자가 입력한 내용이 없습니다.']\r\n\r\n          switch (type) {\r\n            case 'email': {\r\n              const regEx =\r\n                /^([\\w-]+(?:\\.[\\w-]+)*)@((?:[\\w-]+\\.)*\\w[\\w-]{0,66})\\.([a-z]{2,6}(?:\\.[a-z]{2})?)$/i\r\n              const valid = regEx.test(value)\r\n              return valid ? [true, value] : [false, '틀린 이메일 주소 입니다.']\r\n            }\r\n          }\r\n          return [false, '컴포넌트 타입이 유효하지 않습니다.']\r\n        }\r\n      }),\r\n      [type]\r\n    )\r\n\r\n    return <input {...inputProps} className={className} ref={inputRef} />\r\n  }\r\n)\r\n"],"mappings":"AACA,OAAQA,UAAU,CAAEC,mBAAmB,CAAEC,OAAO,CAAEC,MAAM,KAAO,OAAO,QAAAC,GAAA,IAAAC,IAAA,yBAMtE,MAAO,MAAM,CAAAC,gBAAgB,cAAGN,UAAU,CACxC,CAAAO,IAAA,CAA+CC,SAAS,GAAK,IAA5D,CAACC,IAAI,CAAEC,SAAS,CAAEC,UAAU,CAAE,GAAGC,UAAU,CAAC,CAAAL,IAAA,CAC3C,KAAM,CAAAG,SAAS,CAAGR,OAAO,CAAC,IAAM,CAAC,OAAO,CAAES,UAAU,CAAC,CAACE,IAAI,CAAC,GAAG,CAAC,CAAE,CAACF,UAAU,CAAC,CAAC,CAC9E,KAAM,CAAAG,QAAQ,CAAGX,MAAM,CAAmB,IAAI,CAAC,CAE/CF,mBAAmB,CACjBO,SAAS,CACT,KAAO,CACLO,QAAQ,CAAEA,CAAA,GAAyB,KAAAC,iBAAA,CACjC,KAAM,CAAAC,KAAK,EAAAD,iBAAA,CAAGF,QAAQ,CAACI,OAAO,UAAAF,iBAAA,iBAAhBA,iBAAA,CAAkBC,KAAK,CACrC,GAAI,CAACA,KAAK,EAAI,CAACA,KAAK,CAACE,MAAM,CAAE,MAAO,CAAC,KAAK,CAAE,oBAAoB,CAAC,CAEjE,OAAQV,IAAI,EACV,IAAK,OAAO,CAAE,CACZ,KAAM,CAAAW,KAAK,CACT,oFAAoF,CACtF,KAAM,CAAAC,KAAK,CAAGD,KAAK,CAACE,IAAI,CAACL,KAAK,CAAC,CAC/B,MAAO,CAAAI,KAAK,CAAG,CAAC,IAAI,CAAEJ,KAAK,CAAC,CAAG,CAAC,KAAK,CAAE,gBAAgB,CAAC,CAC1D,CACF,CACA,MAAO,CAAC,KAAK,CAAE,qBAAqB,CAAC,CACvC,CACF,CAAC,CAAC,CACF,CAACR,IAAI,CACP,CAAC,CAED,mBAAOJ,IAAA,aAAWO,UAAU,CAAEF,SAAS,CAAEA,SAAU,CAACa,GAAG,CAAET,QAAS,CAAE,CAAC,CACvE,CACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}