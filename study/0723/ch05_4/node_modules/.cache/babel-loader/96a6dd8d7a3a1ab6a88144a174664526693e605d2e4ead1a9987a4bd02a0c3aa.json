{"ast":null,"code":"const initialState = {};\nexport const reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case '@listidCardids/set':\n      // 목록uuid의 속성에 카드uuid의 배열을 추가, 계산된 속성명\n      return {\n        ...state,\n        [action.payload.listid]: action.payload.cardids\n      };\n    case '@listidCardids/remove':\n      {\n        // listidOrders에서 특정 목록(그릇)이 삭제되면 listidCardidOrders 에서도 state[삭제된_리스트_uuid] 부분을 삭제해야 한다.\n        const newState = {\n          ...state\n        }; // 깊은 복사\n        delete newState[action.payload]; // 색인 연산자로 대상 속성 지정 후 delete\n        return newState;\n      }\n    case '@listidCardids/prependCardid':\n      {\n        const cardids = state[action.payload.listid];\n        return {\n          ...state,\n          [action.payload.listid]: [action.payload.cardid, ...cardids]\n        };\n      }\n    case '@listidCardids/appendCardid':\n      {\n        // 계산된 속성명은 추가 뿐만 아니라 update도 가능하다.\n        const cardids = state[action.payload.listid];\n        return {\n          ...state,\n          [action.payload.listid]: [...cardids, action.payload.cardid]\n        };\n      }\n    case '@listidCardids/removeCardid':\n      {\n        const cardids = state[action.payload.listid];\n        return {\n          ...state,\n          [action.payload.listid]: cardids.filter(id => id !== action.payload.cardid)\n        };\n      }\n  }\n  return state;\n};","map":{"version":3,"names":["initialState","reducer","state","action","type","payload","listid","cardids","newState","cardid","filter","id"],"sources":["C:/Users/82102/dev/projects/byKhanc/study/0723/ch05_4/src/store/listidCardidOrders/reducers.ts"],"sourcesContent":["import * as T from './types'\r\n\r\nconst initialState: T.State = {}\r\n\r\nexport const reducer = (state: T.State = initialState, action: T.Actions) => {\r\n  switch (action.type) {\r\n    case '@listidCardids/set': // 목록uuid의 속성에 카드uuid의 배열을 추가, 계산된 속성명\r\n      return {...state, [action.payload.listid]: action.payload.cardids}\r\n    case '@listidCardids/remove': {\r\n      // listidOrders에서 특정 목록(그릇)이 삭제되면 listidCardidOrders 에서도 state[삭제된_리스트_uuid] 부분을 삭제해야 한다.\r\n      const newState = {...state} // 깊은 복사\r\n      delete newState[action.payload] // 색인 연산자로 대상 속성 지정 후 delete\r\n      return newState\r\n    }\r\n    case '@listidCardids/prependCardid': {\r\n      const cardids = state[action.payload.listid]\r\n      return {...state, [action.payload.listid]: [action.payload.cardid, ...cardids]}\r\n    }\r\n    case '@listidCardids/appendCardid': {\r\n      // 계산된 속성명은 추가 뿐만 아니라 update도 가능하다.\r\n      const cardids = state[action.payload.listid]\r\n      return {...state, [action.payload.listid]: [...cardids, action.payload.cardid]}\r\n    }\r\n    case '@listidCardids/removeCardid': {\r\n      const cardids = state[action.payload.listid]\r\n      return {\r\n        ...state,\r\n        [action.payload.listid]: cardids.filter(id => id !== action.payload.cardid)\r\n      }\r\n    }\r\n  }\r\n  return state\r\n}\r\n"],"mappings":"AAEA,MAAMA,YAAqB,GAAG,CAAC,CAAC;AAEhC,OAAO,MAAMC,OAAO,GAAGA,CAACC,KAAc,GAAGF,YAAY,EAAEG,MAAiB,KAAK;EAC3E,QAAQA,MAAM,CAACC,IAAI;IACjB,KAAK,oBAAoB;MAAE;MACzB,OAAO;QAAC,GAAGF,KAAK;QAAE,CAACC,MAAM,CAACE,OAAO,CAACC,MAAM,GAAGH,MAAM,CAACE,OAAO,CAACE;MAAO,CAAC;IACpE,KAAK,uBAAuB;MAAE;QAC5B;QACA,MAAMC,QAAQ,GAAG;UAAC,GAAGN;QAAK,CAAC,EAAC;QAC5B,OAAOM,QAAQ,CAACL,MAAM,CAACE,OAAO,CAAC,EAAC;QAChC,OAAOG,QAAQ;MACjB;IACA,KAAK,8BAA8B;MAAE;QACnC,MAAMD,OAAO,GAAGL,KAAK,CAACC,MAAM,CAACE,OAAO,CAACC,MAAM,CAAC;QAC5C,OAAO;UAAC,GAAGJ,KAAK;UAAE,CAACC,MAAM,CAACE,OAAO,CAACC,MAAM,GAAG,CAACH,MAAM,CAACE,OAAO,CAACI,MAAM,EAAE,GAAGF,OAAO;QAAC,CAAC;MACjF;IACA,KAAK,6BAA6B;MAAE;QAClC;QACA,MAAMA,OAAO,GAAGL,KAAK,CAACC,MAAM,CAACE,OAAO,CAACC,MAAM,CAAC;QAC5C,OAAO;UAAC,GAAGJ,KAAK;UAAE,CAACC,MAAM,CAACE,OAAO,CAACC,MAAM,GAAG,CAAC,GAAGC,OAAO,EAAEJ,MAAM,CAACE,OAAO,CAACI,MAAM;QAAC,CAAC;MACjF;IACA,KAAK,6BAA6B;MAAE;QAClC,MAAMF,OAAO,GAAGL,KAAK,CAACC,MAAM,CAACE,OAAO,CAACC,MAAM,CAAC;QAC5C,OAAO;UACL,GAAGJ,KAAK;UACR,CAACC,MAAM,CAACE,OAAO,CAACC,MAAM,GAAGC,OAAO,CAACG,MAAM,CAACC,EAAE,IAAIA,EAAE,KAAKR,MAAM,CAACE,OAAO,CAACI,MAAM;QAC5E,CAAC;MACH;EACF;EACA,OAAOP,KAAK;AACd,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}